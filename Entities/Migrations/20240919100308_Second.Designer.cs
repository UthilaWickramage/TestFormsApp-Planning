// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(ScheduleDBContext))]
    [Migration("20240919100308_Second")]
    partial class Second
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.CustomDay", b =>
                {
                    b.Property<int>("CustomDay_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomDay_Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkstationId")
                        .HasColumnType("int");

                    b.HasKey("CustomDay_Id");

                    b.HasIndex("WorkstationId");

                    b.ToTable("CustomDays");
                });

            modelBuilder.Entity("Entities.Holiday", b =>
                {
                    b.Property<int>("HolidayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HolidayId"));

                    b.Property<DateTime>("HolidayDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HolidayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HolidayId");

                    b.ToTable("Holidays");
                });

            modelBuilder.Entity("Entities.Operation_Type", b =>
                {
                    b.Property<int>("Operation_Type_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Operation_Type_Id"));

                    b.Property<string>("Operation_Type_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Operation_Type_Id");

                    b.ToTable("OperationTypes");
                });

            modelBuilder.Entity("Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpectedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Qty")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Entities.Output_Rate", b =>
                {
                    b.Property<int>("Output_Rate_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Output_Rate_Id"));

                    b.Property<int>("OperationTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("WorkstationId")
                        .HasColumnType("int");

                    b.HasKey("Output_Rate_Id");

                    b.HasIndex("OperationTypeId");

                    b.HasIndex("ProductId");

                    b.HasIndex("WorkstationId");

                    b.ToTable("OutputRates");
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.Property<int>("Product_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product_Id"));

                    b.Property<string>("Product_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Product_Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Entities.ScheduleDetails", b =>
                {
                    b.Property<int>("ScheduleDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleDetailsId"));

                    b.Property<double>("DurationInHours")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationTypeId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<double>("Qty")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VisibleEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VisibleStartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkStationId")
                        .HasColumnType("int");

                    b.HasKey("ScheduleDetailsId");

                    b.HasIndex("OperationTypeId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.HasIndex("WorkStationId");

                    b.ToTable("ScheduleDetails");
                });

            modelBuilder.Entity("Entities.WorkStation", b =>
                {
                    b.Property<int>("WorkStationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkStationId"));

                    b.Property<string>("WorkStationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkStationId");

                    b.ToTable("WorkStations");
                });

            modelBuilder.Entity("Entities.CustomDay", b =>
                {
                    b.HasOne("Entities.WorkStation", "WorkStation")
                        .WithMany("CustomDays")
                        .HasForeignKey("WorkstationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkStation");
                });

            modelBuilder.Entity("Entities.Order", b =>
                {
                    b.HasOne("Entities.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Entities.Output_Rate", b =>
                {
                    b.HasOne("Entities.Operation_Type", "OperationType")
                        .WithMany("OutputRates")
                        .HasForeignKey("OperationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Product", "Product")
                        .WithMany("OutputRates")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.WorkStation", "WorkStation")
                        .WithMany("OutputRates")
                        .HasForeignKey("WorkstationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationType");

                    b.Navigation("Product");

                    b.Navigation("WorkStation");
                });

            modelBuilder.Entity("Entities.ScheduleDetails", b =>
                {
                    b.HasOne("Entities.Operation_Type", "OperationType")
                        .WithMany()
                        .HasForeignKey("OperationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Order", "Order")
                        .WithOne("ScheduleDetails")
                        .HasForeignKey("Entities.ScheduleDetails", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.WorkStation", "WorkStation")
                        .WithMany("ScheduleDetails")
                        .HasForeignKey("WorkStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationType");

                    b.Navigation("Order");

                    b.Navigation("WorkStation");
                });

            modelBuilder.Entity("Entities.Operation_Type", b =>
                {
                    b.Navigation("OutputRates");
                });

            modelBuilder.Entity("Entities.Order", b =>
                {
                    b.Navigation("ScheduleDetails")
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("OutputRates");
                });

            modelBuilder.Entity("Entities.WorkStation", b =>
                {
                    b.Navigation("CustomDays");

                    b.Navigation("OutputRates");

                    b.Navigation("ScheduleDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
